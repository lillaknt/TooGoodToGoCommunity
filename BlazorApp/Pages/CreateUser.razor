@page "/CreateUser"
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@inject IUserService UserService
@inject NavigationManager navMgr

<PageTitle>Create Account</PageTitle>
<div class="top-bar-nav">
    <TopBar Title="Join"/>
</div>

<div class="container">

    <h3>Join the community!</h3>
    <div class="field">
        <label>Email address</label>
        <input type="text" class="form-control" @bind="email" @bind:event="oninput"/>
    </div>

    <div class="field">
        <label>Name</label>
        <input type="text" class="form-control" @bind="firstName" @bind:event="oninput"/>
    </div>

    <div class="field">
        <label>Password</label>
        <input type="password" class="form-control" @bind="password" @bind:event="oninput"/>
    </div>

    <div class="field">
        <label>Postal code</label>
        <input type="number" class="form-control" @bind="postCode" @bind:event="oninput"/>
    </div>

    <div class="field">
        <button @onclick="Create" disabled="@(string.IsNullOrEmpty(email) || string.IsNullOrEmpty(firstName) || string.IsNullOrEmpty(password))"
                class="button-primary">
            Create Account
        </button>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="container">
        <span class="psw2">Already have an account? </span>
        <button class="button-primary" @onclick="NavigateToLogin">Log in</button>
    </div>
</div>


@code {
    private string email = "";
    private string firstName = "";
    private string password = "";
    private int postCode;
    private string resultMsg = "";
    private string color = "";

    private async Task Create()
    {
        resultMsg = "";

        try
        {
            await UserService.CreateAsync(new UserCreationDto(email, firstName, password, postCode));
            ResetForm();
            resultMsg = "User successfully created";
            color = "green";
            navMgr.NavigateTo("/ViewPosts");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }

    private void ResetForm()
    {
        email = "";
        firstName = "";
        password = "";
        postCode = 0;
    }


    private void NavigateToLogin()
    {
        navMgr.NavigateTo("/Login");
    }

}
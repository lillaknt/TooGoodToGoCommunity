@page "/ViewPosts"
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject IPostService postService

<h3>View Posts</h3>

@if (posts == null)
{
}
else if (!posts.Any())
{
    <p>No posts to display</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Post ID</th>
            <th>Title</th>
            <th>Description</th>
            <th>Price</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in posts)
        {
            <tr>
                <td>@item.Id</td>
                
                <td>@item.Title</td>
                <td>@item.Description</td>
                <td>@item.Price</td>
            </tr>
        }
        </tbody>
    </table>
}
@if (!string.IsNullOrEmpty(msg))
{
    <label style="color: red">@msg</label>
}

@code {
    private IEnumerable<Post>? posts;
    private string msg = "";

    // Use OnInitializedAsync to load posts when the component is initialized
    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadPosts();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private async Task LoadPosts()
    {
        posts = await postService.GetAsync(null, null, null);
    }
}
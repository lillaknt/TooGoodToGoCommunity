@page "/PurchaseConfirmation"
@using Domain.Models
@using HttpClients.ClientInterfaces
@using System.Security.Claims
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserService UserService
<PageTitle>Order Confirmation</PageTitle>
<div class="top-bar-nav">
    <TopBar Title="Success"/>
</div>

<div class="button-container">
    
     <div class="imgcontainer">
            <img src="/images/TGTGCommunity-logo.png" alt="logo" class="avatar">
        </div>
    <h6>Thank you for saving the planet together one meal at a time!</h6>
    <p>Check out your total impact on your profile:</p>
    <button class="button-primary" @onclick="NavigateToPerson">My Profile</button>
    <button class="button-primary" @onclick="NavigateToImpact">My impact</button>
</div>


@code
{
    private User user;
    private string email; // Declare email as a field
    
    
    protected override async Task OnInitializedAsync()
    {
    // Access the user's email from the authentication state
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        email = authenticationState.User.FindFirstValue(ClaimTypes.Email);

        try
        {
    // Retrieve user details using the GetAsync method
            var users = await UserService.GetAsync(email);
            user = users.FirstOrDefault(); // Assuming you're expecting a single user
        }
        catch (Exception ex)
        {
    // Handle exceptions
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
    
    private void NavigateToImpact()
    {
        NavigationManager.NavigateTo("/PersonalImpact");
    }
    
    private void NavigateToPerson()
    {
        NavigationManager.NavigateTo("/UserProfile");
    }
    
  
}

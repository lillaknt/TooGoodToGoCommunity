@page "/UserProfile"
@using System.Security.Claims
@attribute [Authorize] 
<!-- this page is only displayed when logged in -->
<!-- this page is an example on how to get our logged in user information when we only need to show it in the HTML -->

<h3>User Profile</h3>
<p>You can only access this page, if you're logged in. Given that you're seeing this, you're logged in</p>

<AuthorizeView>
    <Authorized>
        <h3>Hello @context.User.Identity.Name</h3>
        <p>Your email: @context.User.Claims.First(claim => claim.Type.Equals(ClaimTypes.Email)).Value</p>
        <p>Your Postal code: @context.User.Claims.First(claim => claim.Type.Equals(ClaimTypes.PostalCode)).Value</p>
        <p>Your Postal code: @context.User.Claims.First(claim => claim.Type.Equals(ClaimTypes.PostalCode)).Value</p>
        <p>@context.User.Claims.First(claim => claim.Type.Equals(ClaimTypes.NameIdentifier)).Value </p>

        <p>
            Your claims include:
            <ol>
                @foreach (var claim in context.User.Claims)
                {
                    <li>
                        <label>@claim.Type: @claim.Value</label>
                    </li>
                }
            </ol>
        </p>
    </Authorized>
    <NotAuthorized>
        <p>You are not logged in.</p>
    </NotAuthorized>
</AuthorizeView>

@code {

}
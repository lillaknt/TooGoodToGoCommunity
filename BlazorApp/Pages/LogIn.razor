@page "/LogIn"
@using HttpClients.ClientInterfaces
@inject IAuthService authService
@inject NavigationManager navMgr

<PageTitle>Login</PageTitle>
<div class="top-bar-nav">
    <TopBar Title="Log In"/>
</div>


<div class="container">

    <div class="imgcontainer">
        <img src="/images/TGTGCommunity-logo.png" alt="logo" class="avatar">
    </div>


    <div class="field">
        <label>Email address</label>
        <input type="text" class="form-control" @bind="email" @bind:event="oninput"/>
    </div>

    <div class="field">
        <label style="text-align: center">Password</label>
        <input type="password" class="form-control" @bind="password" @bind:event="oninput"/>
    </div>
    @if (!string.IsNullOrEmpty(errorLabel))
    {
        <div class="psw2">
            <label style="color: red">
                @errorLabel
            </label>
        </div>
    }
    <div class="field">
        <button class="button-primary" @onclick="LoginAsync">Log in</button>
    </div>
    <span class="psw">
        <a href="#">Forgot your password?</a>
    </span>

</div>


<div class="container">
    <span class="psw2">Don't have an account yet? </span>
    <button class="button-primary" @onclick="NavigateToCreateUser">Create Account</button>


</div>


@code {
    private string email;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            await authService.LoginAsync(email, password);
            navMgr.NavigateTo("/ViewPosts");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }

    private void NavigateToCreateUser()
    {
        navMgr.NavigateTo("/CreateUser");
    }

}
@page "/"
@using System.Security.Claims
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject NavigationManager NavigationManager
@inject IUserService UserService
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Home</PageTitle>


<div class="container">


    <h2>Let 's share more, and waste less.</h2>
    <div class="imgcontainer">
        <img src="/images/TGTGCommunity-logo.png" alt="logo" class="avatar">
    </div>
    <button @onclick="NavigateToCreateUser" class="button-primary">Create User</button>
    <button @onclick="NavigateToLogin" class="button-primary">Login</button>

</div>


@code {
    
    private User user;
    private string email; // Declare email as a field
    protected override async Task OnInitializedAsync()
    
    
    {
    // Access the user's email from the authentication state
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        
        email = authenticationState.User.FindFirstValue(ClaimTypes.Email);

        try
        {
    // Retrieve user details using the GetAsync method
            var users = await UserService.GetAsync(email);
            user = users.FirstOrDefault(); // Assuming you're expecting a single user
        }
        catch (Exception ex)
        {
    // Handle exceptions
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void NavigateToCreateUser()
    {
    // Use NavigationManager to navigate to the CreateUser page
        NavigationManager.NavigateTo("/CreateUser");
    }

    private void NavigateToLogin()
    {
    // Use NavigationManager to navigate to the CreateUser page
        NavigationManager.NavigateTo("/Login");
    }

}